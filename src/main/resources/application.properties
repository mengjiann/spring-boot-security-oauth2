# Web server port
server.port=8443

spring.datasource.url=jdbc:h2:mem:oauth2;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.driver-class=org.h2.Driver

spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=create
spring.jpa.hibernate.properties.hibernate.show_sql=true
spring.jpa.hibernate.properties.hibernate.use_sql_comments=true
spring.jpa.hibernate.properties.hibernate.format_sql=true

spring.h2.console.enabled=true
spring.h2.console.path=/console
spring.h2.console.settings.trace=false
spring.h2.console.settings.web-allow-others=false

logging.level.root=info
logging.level.com.mj.auth=debug
logging.file=logs/demo-oauth2.log

# Thymeleaf configuration
spring.thymeleaf.cache=false
spring.thymeleaf.mode=LEGACYHTML5

# OAuth2 configuration for Spring.
# Facebook
spring.security.oauth2.client.registration.facebook.client-id=
spring.security.oauth2.client.registration.facebook.client-secret=
spring.security.oauth2.client.provider.facebook.user-info-uri=https://graph.facebook.com/me?fields=id,name,email

# Google
spring.security.oauth2.client.registration.google.client-id=
spring.security.oauth2.client.registration.google.client-secret=
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.client-authentication-method=form
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://www.googleapis.com/oauth2/v3/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/userinfo/v2/me?fields=id,name,email
spring.security.oauth2.client.provider.google.user-name-attribute=id

# Enable access log
server.tomcat.accesslog.enabled=false
server.tomcat.basedir=.
server.tomcat.accesslog.pattern=%{yyyy-MM-dd HH:mm:ss}t\t%s\t%r\t%{User-Agent}i\t%{X-Forwarded-For}i\t%a\t%b

# Enable this if server is behind load balancer with SSL termination.
# server.use-forward-headers=true

# SSL configuration for spring boot;
# Disable if SSL cert is terminated at load balancer
server.ssl.key-store: classpath:keystore.p12
server.ssl.key-store-password: Password123456
server.ssl.keyStoreType: PKCS12
server.ssl.keyAlias: tomcat